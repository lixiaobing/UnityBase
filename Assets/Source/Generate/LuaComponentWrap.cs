//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaComponent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetLuaComponent", GetLuaComponent);
		L.RegFunction("Bind", Bind);
		L.RegFunction("Cleanup", Cleanup);
		L.RegFunction("SetLuaTable", SetLuaTable);
		L.RegFunction("GetLuaTable", GetLuaTable);
		L.RegFunction("ShowAttackFlagSector", ShowAttackFlagSector);
		L.RegFunction("ShowAttackFlagRectangle", ShowAttackFlagRectangle);
		L.RegFunction("ClearAttackFlag", ClearAttackFlag);
		L.RegFunction("ShowAttackRange", ShowAttackRange);
		L.RegFunction("ClearAttackRange", ClearAttackRange);
		L.RegFunction("ShowAttackRing", ShowAttackRing);
		L.RegFunction("ClearAttackRing", ClearAttackRing);
		L.RegFunction("ShowAttackRay", ShowAttackRay);
		L.RegFunction("ClearAttackRay", ClearAttackRay);
		L.RegFunction("ShowAttackBox", ShowAttackBox);
		L.RegFunction("ClearAttackBox", ClearAttackBox);
		L.RegFunction("ShowAttackSector", ShowAttackSector);
		L.RegFunction("ClearAttackSector", ClearAttackSector);
		L.RegFunction("GetMeshRound", GetMeshRound);
		L.RegFunction("GetRectangleMesh", GetRectangleMesh);
		L.RegFunction("GetSectorMesh", GetSectorMesh);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("LuaModule", get_LuaModule, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLuaComponent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			LuaInterface.LuaTable o = LuaComponent.GetLuaComponent(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Bind(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
			LuaComponent o = LuaComponent.Bind(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Cleanup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.Cleanup();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLuaTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.SetLuaTable(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLuaTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			LuaInterface.LuaTable o = obj.GetLuaTable();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAttackFlagSector(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.Color arg4 = ToLua.ToColor(L, 6);
			obj.ShowAttackFlagSector(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAttackFlagRectangle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.Color arg4 = ToLua.ToColor(L, 6);
			obj.ShowAttackFlagRectangle(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAttackFlag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.ClearAttackFlag();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAttackRange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Color arg2 = ToLua.ToColor(L, 4);
			obj.ShowAttackRange(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAttackRange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.ClearAttackRange();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAttackRing(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Color arg3 = ToLua.ToColor(L, 5);
			UnityEngine.Color arg4 = ToLua.ToColor(L, 6);
			obj.ShowAttackRing(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAttackRing(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.ClearAttackRing();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAttackRay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			UnityEngine.Color arg2 = ToLua.ToColor(L, 4);
			obj.ShowAttackRay(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAttackRay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.ClearAttackRay();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAttackBox(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 4);
			UnityEngine.Color arg3 = ToLua.ToColor(L, 5);
			obj.ShowAttackBox(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAttackBox(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.ClearAttackBox();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAttackSector(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.Color arg4 = ToLua.ToColor(L, 6);
			obj.ShowAttackSector(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAttackSector(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.ClearAttackSector();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMeshRound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Mesh o = LuaComponent.GetMeshRound(arg0, arg1);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRectangleMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 1);
			UnityEngine.Mesh o = LuaComponent.GetRectangleMesh(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSectorMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
			UnityEngine.Mesh o = LuaComponent.GetSectorMesh(arg0, arg1, arg2);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaModule(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaComponent obj = (LuaComponent)o;
			LuaInterface.LuaTable ret = obj.LuaModule;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaModule on a nil value");
		}
	}
}

