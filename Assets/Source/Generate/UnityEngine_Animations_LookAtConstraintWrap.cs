//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Animations_LookAtConstraintWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Animations.LookAtConstraint), typeof(UnityEngine.Behaviour));
		L.RegFunction("GetSources", GetSources);
		L.RegFunction("SetSources", SetSources);
		L.RegFunction("AddSource", AddSource);
		L.RegFunction("RemoveSource", RemoveSource);
		L.RegFunction("GetSource", GetSource);
		L.RegFunction("SetSource", SetSource);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("weight", get_weight, set_weight);
		L.RegVar("roll", get_roll, set_roll);
		L.RegVar("constraintActive", get_constraintActive, set_constraintActive);
		L.RegVar("locked", get_locked, set_locked);
		L.RegVar("rotationAtRest", get_rotationAtRest, set_rotationAtRest);
		L.RegVar("rotationOffset", get_rotationOffset, set_rotationOffset);
		L.RegVar("worldUpObject", get_worldUpObject, set_worldUpObject);
		L.RegVar("useUpObject", get_useUpObject, set_useUpObject);
		L.RegVar("sourceCount", get_sourceCount, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSources(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)ToLua.CheckObject(L, 1, typeof(UnityEngine.Animations.LookAtConstraint));
			System.Collections.Generic.List<UnityEngine.Animations.ConstraintSource> arg0 = (System.Collections.Generic.List<UnityEngine.Animations.ConstraintSource>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Animations.ConstraintSource>));
			obj.GetSources(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSources(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)ToLua.CheckObject(L, 1, typeof(UnityEngine.Animations.LookAtConstraint));
			System.Collections.Generic.List<UnityEngine.Animations.ConstraintSource> arg0 = (System.Collections.Generic.List<UnityEngine.Animations.ConstraintSource>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Animations.ConstraintSource>));
			obj.SetSources(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)ToLua.CheckObject(L, 1, typeof(UnityEngine.Animations.LookAtConstraint));
			UnityEngine.Animations.ConstraintSource arg0 = StackTraits<UnityEngine.Animations.ConstraintSource>.Check(L, 2);
			int o = obj.AddSource(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)ToLua.CheckObject(L, 1, typeof(UnityEngine.Animations.LookAtConstraint));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RemoveSource(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)ToLua.CheckObject(L, 1, typeof(UnityEngine.Animations.LookAtConstraint));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Animations.ConstraintSource o = obj.GetSource(arg0);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)ToLua.CheckObject(L, 1, typeof(UnityEngine.Animations.LookAtConstraint));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Animations.ConstraintSource arg1 = StackTraits<UnityEngine.Animations.ConstraintSource>.Check(L, 3);
			obj.SetSource(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_weight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			float ret = obj.weight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index weight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_roll(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			float ret = obj.roll;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index roll on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constraintActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			bool ret = obj.constraintActive;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constraintActive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_locked(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			bool ret = obj.locked;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index locked on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rotationAtRest(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			UnityEngine.Vector3 ret = obj.rotationAtRest;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rotationAtRest on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rotationOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			UnityEngine.Vector3 ret = obj.rotationOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rotationOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_worldUpObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			UnityEngine.Transform ret = obj.worldUpObject;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index worldUpObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useUpObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			bool ret = obj.useUpObject;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useUpObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sourceCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			int ret = obj.sourceCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sourceCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_weight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.weight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index weight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_roll(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.roll = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index roll on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constraintActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.constraintActive = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constraintActive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_locked(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.locked = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index locked on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rotationAtRest(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.rotationAtRest = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rotationAtRest on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rotationOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.rotationOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rotationOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_worldUpObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.worldUpObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index worldUpObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useUpObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Animations.LookAtConstraint obj = (UnityEngine.Animations.LookAtConstraint)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.useUpObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useUpObject on a nil value");
		}
	}
}

